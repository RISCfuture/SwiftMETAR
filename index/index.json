{"interfaceLanguages":{"swift":[{"children":[{"title":"Basics","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/gettingstarted","title":"Getting Started","type":"article"},{"children":[{"title":"Parsing","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/metar\/from(string:on:lenientremarks:)","title":"static func from(string: String, on: Date?, lenientRemarks: Bool) throws -> METAR","type":"method"},{"title":"Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/metar\/text","title":"let text: String?","type":"property"},{"path":"\/documentation\/swiftmetar\/metar\/calendardate","title":"let calendarDate: DateComponents","type":"property"},{"path":"\/documentation\/swiftmetar\/metar\/date","title":"var date: Date","type":"property"},{"title":"Issuer","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/metar\/issuance-swift.property","title":"let issuance: METAR.Issuance","type":"property"},{"path":"\/documentation\/swiftmetar\/metar\/stationid","title":"let stationID: String","type":"property"},{"path":"\/documentation\/swiftmetar\/metar\/observer-swift.property","title":"let observer: METAR.Observer","type":"property"},{"title":"Conditions","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/metar\/wind","title":"let wind: Wind?","type":"property"},{"path":"\/documentation\/swiftmetar\/metar\/visibility","title":"let visibility: Visibility?","type":"property"},{"path":"\/documentation\/swiftmetar\/metar\/runwayvisibility","title":"let runwayVisibility: Array<RunwayVisibility>","type":"property"},{"path":"\/documentation\/swiftmetar\/metar\/weather","title":"let weather: Array<Weather>?","type":"property"},{"path":"\/documentation\/swiftmetar\/metar\/conditions","title":"let conditions: Array<Condition>","type":"property"},{"path":"\/documentation\/swiftmetar\/metar\/temperature","title":"let temperature: Int8?","type":"property"},{"path":"\/documentation\/swiftmetar\/metar\/dewpoint","title":"let dewpoint: Int8?","type":"property"},{"path":"\/documentation\/swiftmetar\/metar\/altimeter","title":"let altimeter: Altimeter?","type":"property"},{"title":"Remarks","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/metar\/remarks","title":"let remarks: Array<RemarkEntry>","type":"property"},{"path":"\/documentation\/swiftmetar\/metar\/remarksstring","title":"let remarksString: String?","type":"property"},{"title":"Associated Types","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/metar\/issuance-swift.enum\/routine","title":"case routine","type":"case"},{"path":"\/documentation\/swiftmetar\/metar\/issuance-swift.enum\/special","title":"case special","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/metar\/issuance-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/metar\/issuance-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/metar\/issuance-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/metar\/issuance-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/metar\/issuance-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/metar\/issuance-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftmetar\/metar\/issuance-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftmetar\/metar\/issuance-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/metar\/issuance-swift.enum","title":"METAR.Issuance","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/metar\/observer-swift.enum\/automated","title":"case automated","type":"case"},{"path":"\/documentation\/swiftmetar\/metar\/observer-swift.enum\/corrected","title":"case corrected","type":"case"},{"path":"\/documentation\/swiftmetar\/metar\/observer-swift.enum\/human","title":"case human","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/metar\/observer-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/metar\/observer-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/metar\/observer-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/metar\/observer-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/metar\/observer-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/metar\/observer-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftmetar\/metar\/observer-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftmetar\/metar\/observer-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/metar\/observer-swift.enum","title":"METAR.Observer","type":"enum"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/metar\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/swiftmetar\/metar","title":"METAR","type":"struct"},{"children":[{"title":"Parsing","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/taf\/from(string:on:)","title":"static func from(string: String, on: Date?) throws -> TAF","type":"method"},{"title":"Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/taf\/text","title":"let text: String?","type":"property"},{"path":"\/documentation\/swiftmetar\/taf\/origincalendardate","title":"let originCalendarDate: DateComponents?","type":"property"},{"path":"\/documentation\/swiftmetar\/taf\/origindate","title":"var originDate: Date?","type":"property"},{"path":"\/documentation\/swiftmetar\/taf\/covers(_:)","title":"func covers(Date) -> Bool","type":"method"},{"title":"Issuer","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/taf\/issuance-swift.property","title":"let issuance: TAF.Issuance","type":"property"},{"path":"\/documentation\/swiftmetar\/taf\/airportid","title":"let airportID: String","type":"property"},{"title":"Conditions","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/taf\/groups","title":"let groups: Array<TAF.Group>","type":"property"},{"path":"\/documentation\/swiftmetar\/taf\/temperatures","title":"let temperatures: Array<TAF.Temperature>","type":"property"},{"path":"\/documentation\/swiftmetar\/taf\/during(_:)","title":"func during(Date) -> TAF.Group?","type":"method"},{"title":"Remarks","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/taf\/remarks","title":"let remarks: Array<RemarkEntry>","type":"property"},{"path":"\/documentation\/swiftmetar\/taf\/remarksstring","title":"let remarksString: String?","type":"property"},{"title":"Associated Types","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/taf\/group\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/taf\/group\/altimeter","title":"var altimeter: Altimeter?","type":"property"},{"path":"\/documentation\/swiftmetar\/taf\/group\/conditions","title":"var conditions: Array<Condition>","type":"property"},{"path":"\/documentation\/swiftmetar\/taf\/group\/icing","title":"var icing: Array<Icing>","type":"property"},{"path":"\/documentation\/swiftmetar\/taf\/group\/period-swift.property","title":"let period: TAF.Group.Period","type":"property"},{"path":"\/documentation\/swiftmetar\/taf\/group\/remarks","title":"var remarks: Array<RemarkEntry>","type":"property"},{"path":"\/documentation\/swiftmetar\/taf\/group\/remarksstring","title":"var remarksString: String?","type":"property"},{"path":"\/documentation\/swiftmetar\/taf\/group\/turbulence","title":"var turbulence: Array<Turbulence>","type":"property"},{"path":"\/documentation\/swiftmetar\/taf\/group\/visibility","title":"var visibility: Visibility?","type":"property"},{"path":"\/documentation\/swiftmetar\/taf\/group\/weather","title":"var weather: Array<Weather>?","type":"property"},{"path":"\/documentation\/swiftmetar\/taf\/group\/wind","title":"var wind: Wind?","type":"property"},{"path":"\/documentation\/swiftmetar\/taf\/group\/windshear","title":"var windshear: Windshear?","type":"property"},{"path":"\/documentation\/swiftmetar\/taf\/group\/windshearconditions","title":"var windshearConditions: Bool","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/taf\/group\/period-swift.enum\/==(_:_:)","title":"static func == (TAF.Group.Period, TAF.Group.Period) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/taf\/group\/period-swift.enum\/becoming(_:)","title":"case becoming(DateComponentsInterval)","type":"case"},{"path":"\/documentation\/swiftmetar\/taf\/group\/period-swift.enum\/from(_:)","title":"case from(DateComponents)","type":"case"},{"path":"\/documentation\/swiftmetar\/taf\/group\/period-swift.enum\/probability(_:period:)","title":"case probability(UInt8, period: DateComponentsInterval)","type":"case"},{"path":"\/documentation\/swiftmetar\/taf\/group\/period-swift.enum\/range(_:)","title":"case range(DateComponentsInterval)","type":"case"},{"path":"\/documentation\/swiftmetar\/taf\/group\/period-swift.enum\/temporary(_:)","title":"case temporary(DateComponentsInterval)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/taf\/group\/period-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/taf\/group\/period-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/taf\/group\/period-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/taf\/group\/period-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/taf\/group\/period-swift.enum","title":"TAF.Group.Period","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/taf\/group\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/taf\/group\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/taf\/group","title":"TAF.Group","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/taf\/issuance-swift.enum\/amended","title":"case amended","type":"case"},{"path":"\/documentation\/swiftmetar\/taf\/issuance-swift.enum\/corrected","title":"case corrected","type":"case"},{"path":"\/documentation\/swiftmetar\/taf\/issuance-swift.enum\/routine","title":"case routine","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/taf\/issuance-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/taf\/issuance-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/taf\/issuance-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/taf\/issuance-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/taf\/issuance-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/taf\/issuance-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftmetar\/taf\/issuance-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftmetar\/taf\/issuance-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/taf\/issuance-swift.enum","title":"TAF.Issuance","type":"enum"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/datecomponentsinterval\/==(_:_:)","title":"static func == (DateComponentsInterval, DateComponentsInterval) -> Bool","type":"op"},{"path":"\/documentation\/swiftmetar\/datecomponentsinterval\/_(_:_:)-12br5","title":"static func < (DateComponentsInterval, DateComponentsInterval) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/datecomponentsinterval\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/swiftmetar\/datecomponentsinterval\/init(start:duration:)","title":"init(start: DateComponents, duration: TimeInterval)","type":"init"},{"path":"\/documentation\/swiftmetar\/datecomponentsinterval\/init(start:end:)","title":"init(start: DateComponents, end: DateComponents)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/datecomponentsinterval\/dateinterval","title":"var dateInterval: DateInterval","type":"property"},{"path":"\/documentation\/swiftmetar\/datecomponentsinterval\/duration","title":"var duration: TimeInterval","type":"property"},{"path":"\/documentation\/swiftmetar\/datecomponentsinterval\/end","title":"var end: DateComponents","type":"property"},{"path":"\/documentation\/swiftmetar\/datecomponentsinterval\/start","title":"var start: DateComponents","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/datecomponentsinterval\/compare(_:)","title":"func compare(DateComponentsInterval) -> ComparisonResult","type":"method"},{"path":"\/documentation\/swiftmetar\/datecomponentsinterval\/contains(_:)","title":"func contains(Date) -> Bool","type":"method"},{"path":"\/documentation\/swiftmetar\/datecomponentsinterval\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftmetar\/datecomponentsinterval\/intersection(with:)","title":"func intersection(with: DateComponentsInterval) -> DateInterval?","type":"method"},{"path":"\/documentation\/swiftmetar\/datecomponentsinterval\/intersects(_:)","title":"func intersects(DateComponentsInterval) -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/datecomponentsinterval\/'...(_:)-8kzlu","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/swiftmetar\/datecomponentsinterval\/'...(_:)-9iu2h","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/swiftmetar\/datecomponentsinterval\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/swiftmetar\/datecomponentsinterval\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/swiftmetar\/datecomponentsinterval\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/swiftmetar\/datecomponentsinterval\/_(_:_:)-4bdj2","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/swiftmetar\/datecomponentsinterval\/_=(_:_:)-7bfu5","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/swiftmetar\/datecomponentsinterval\/_=(_:_:)-h32c","title":"static func <= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/datecomponentsinterval\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/datecomponentsinterval\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/datecomponentsinterval\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/datecomponentsinterval","title":"DateComponentsInterval","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/icing\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/icing\/base","title":"var base: UInt","type":"property"},{"path":"\/documentation\/swiftmetar\/icing\/depth","title":"var depth: UInt","type":"property"},{"path":"\/documentation\/swiftmetar\/icing\/top","title":"var top: UInt","type":"property"},{"path":"\/documentation\/swiftmetar\/icing\/type","title":"var type: Icing.IcingType","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/icing\/icingtype\/lightclear","title":"case lightClear","type":"case"},{"path":"\/documentation\/swiftmetar\/icing\/icingtype\/lightmixed","title":"case lightMixed","type":"case"},{"path":"\/documentation\/swiftmetar\/icing\/icingtype\/lightrime","title":"case lightRime","type":"case"},{"path":"\/documentation\/swiftmetar\/icing\/icingtype\/moderateclear","title":"case moderateClear","type":"case"},{"path":"\/documentation\/swiftmetar\/icing\/icingtype\/moderatemixed","title":"case moderateMixed","type":"case"},{"path":"\/documentation\/swiftmetar\/icing\/icingtype\/moderaterime","title":"case moderateRime","type":"case"},{"path":"\/documentation\/swiftmetar\/icing\/icingtype\/severeclear","title":"case severeClear","type":"case"},{"path":"\/documentation\/swiftmetar\/icing\/icingtype\/severemixed","title":"case severeMixed","type":"case"},{"path":"\/documentation\/swiftmetar\/icing\/icingtype\/severerime","title":"case severeRime","type":"case"},{"path":"\/documentation\/swiftmetar\/icing\/icingtype\/tracenone","title":"case traceNone","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/icing\/icingtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/icing\/icingtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/icing\/icingtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/icing\/icingtype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/icing\/icingtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/icing\/icingtype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftmetar\/icing\/icingtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftmetar\/icing\/icingtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/icing\/icingtype","title":"Icing.IcingType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/icing\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/icing\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/icing","title":"Icing","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/turbulence\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/turbulence\/base","title":"var base: UInt","type":"property"},{"path":"\/documentation\/swiftmetar\/turbulence\/depth","title":"var depth: UInt","type":"property"},{"path":"\/documentation\/swiftmetar\/turbulence\/frequency-swift.property","title":"var frequency: Turbulence.Frequency?","type":"property"},{"path":"\/documentation\/swiftmetar\/turbulence\/intensity-swift.property","title":"var intensity: Turbulence.Intensity","type":"property"},{"path":"\/documentation\/swiftmetar\/turbulence\/location-swift.property","title":"var location: Turbulence.Location?","type":"property"},{"path":"\/documentation\/swiftmetar\/turbulence\/top","title":"var top: UInt","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/turbulence\/frequency-swift.enum\/frequent","title":"case frequent","type":"case"},{"path":"\/documentation\/swiftmetar\/turbulence\/frequency-swift.enum\/occasional","title":"case occasional","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/turbulence\/frequency-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/turbulence\/frequency-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/turbulence\/frequency-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/turbulence\/frequency-swift.enum","title":"Turbulence.Frequency","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/turbulence\/intensity-swift.enum\/extreme","title":"case extreme","type":"case"},{"path":"\/documentation\/swiftmetar\/turbulence\/intensity-swift.enum\/light","title":"case light","type":"case"},{"path":"\/documentation\/swiftmetar\/turbulence\/intensity-swift.enum\/moderate","title":"case moderate","type":"case"},{"path":"\/documentation\/swiftmetar\/turbulence\/intensity-swift.enum\/none","title":"case none","type":"case"},{"path":"\/documentation\/swiftmetar\/turbulence\/intensity-swift.enum\/severe","title":"case severe","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/turbulence\/intensity-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/turbulence\/intensity-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/turbulence\/intensity-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/turbulence\/intensity-swift.enum","title":"Turbulence.Intensity","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/turbulence\/location-swift.enum\/clearair","title":"case clearAir","type":"case"},{"path":"\/documentation\/swiftmetar\/turbulence\/location-swift.enum\/incloud","title":"case inCloud","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/turbulence\/location-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/turbulence\/location-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/turbulence\/location-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/turbulence\/location-swift.enum","title":"Turbulence.Location","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/turbulence\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/turbulence\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/turbulence","title":"Turbulence","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/taf\/temperature\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/taf\/temperature\/time","title":"let time: DateComponents","type":"property"},{"path":"\/documentation\/swiftmetar\/taf\/temperature\/type","title":"let type: TAF.Temperature.TemperatureType?","type":"property"},{"path":"\/documentation\/swiftmetar\/taf\/temperature\/value","title":"let value: Int","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/taf\/temperature\/temperaturetype\/maximum","title":"case maximum","type":"case"},{"path":"\/documentation\/swiftmetar\/taf\/temperature\/temperaturetype\/minimum","title":"case minimum","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/taf\/temperature\/temperaturetype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/taf\/temperature\/temperaturetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/taf\/temperature\/temperaturetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/taf\/temperature\/temperaturetype","title":"TAF.Temperature.TemperatureType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/taf\/temperature\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/taf\/temperature\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/taf\/temperature","title":"TAF.Temperature","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/taf\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/swiftmetar\/taf","title":"TAF","type":"struct"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remarkentry\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remarkentry\/remark","title":"let remark: Remark","type":"property"},{"path":"\/documentation\/swiftmetar\/remarkentry\/urgency","title":"let urgency: Remark.Urgency","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remarkentry\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/remarkentry\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/remarkentry","title":"RemarkEntry","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/location\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/location\/direction","title":"let direction: Remark.Direction","type":"property"},{"path":"\/documentation\/swiftmetar\/remark\/location\/distance","title":"let distance: UInt","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/location\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/remark\/location\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/remark\/location","title":"Remark.Location","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/precipitationevent\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/precipitationevent\/descriptor","title":"let descriptor: Weather.Descriptor?","type":"property"},{"path":"\/documentation\/swiftmetar\/remark\/precipitationevent\/event","title":"let event: Remark.EventType","type":"property"},{"path":"\/documentation\/swiftmetar\/remark\/precipitationevent\/time","title":"let time: DateComponents","type":"property"},{"path":"\/documentation\/swiftmetar\/remark\/precipitationevent\/type","title":"let type: Weather.Phenomenon","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/precipitationevent\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/remark\/precipitationevent\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/remark\/precipitationevent","title":"Remark.PrecipitationEvent","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/thunderstormevent\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/thunderstormevent\/time","title":"let time: DateComponents","type":"property"},{"path":"\/documentation\/swiftmetar\/remark\/thunderstormevent\/type","title":"let type: Remark.EventType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/thunderstormevent\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/remark\/thunderstormevent\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/remark\/thunderstormevent","title":"Remark.ThunderstormEvent","type":"struct"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/aircraftmishap","title":"case aircraftMishap","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/cloudtypes(low:middle:high:)","title":"case cloudTypes(low: Remark.LowCloudType, middle: Remark.MiddleCloudType, high: Remark.HighCloudType)","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/correction(time:)","title":"case correction(time: DateComponents)","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/dailyprecipitationamount(_:)","title":"case dailyPrecipitationAmount(Float?)","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/dailytemperatureextremes(low:high:)","title":"case dailyTemperatureExtremes(low: Float, high: Float)","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/hailstonesize(_:)","title":"case hailstoneSize(Ratio)","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/hourlyprecipitationamount(_:)","title":"case hourlyPrecipitationAmount(Float)","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/inoperativesensor(_:)","title":"case inoperativeSensor(Remark.SensorType)","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/last","title":"case last","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/lightning(frequency:types:proximity:directions:)","title":"case lightning(frequency: Remark.Frequency?, types: Set<Remark.LightningType>, proximity: Remark.Proximity?, directions: Set<Remark.Direction>)","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/maintenance","title":"case maintenance","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/navalforecaster(center:id:)","title":"case navalForecaster(center: Remark.NavalWeatherCenter, ID: UInt)","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/next(_:)","title":"case next(DateComponents)","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/noamendmentsafter(_:)","title":"case noAmendmentsAfter(DateComponents)","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/nospeci","title":"case noSPECI","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/obscuration(type:amount:height:)","title":"case obscuration(type: Weather.Phenomenon, amount: Remark.Coverage?, height: UInt)","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/observationtype(_:augmented:)","title":"case observationType(Remark.ObservationType, augmented: Bool)","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/observedprecipitation(type:proximity:directions:)","title":"case observedPrecipitation(type: Remark.ObservedPrecipitationType, proximity: Remark.Proximity?, directions: Set<Remark.Direction>)","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/observedvisibility(source:distance:)","title":"case observedVisibility(source: Remark.VisibilitySource, distance: Ratio)","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/peakwinds(_:time:)","title":"case peakWinds(Wind, time: DateComponents)","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/periodiciceaccretionamount(period:amount:)","title":"case periodicIceAccretionAmount(period: UInt, amount: Float)","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/periodicprecipitationamount(period:amount:)","title":"case periodicPrecipitationAmount(period: UInt, amount: Float?)","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/precipitationbeginend(events:)","title":"case precipitationBeginEnd(events: Array<Remark.PrecipitationEvent>)","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/pressuretendency(character:change:)","title":"case pressureTendency(character: Remark.PressureCharacter, change: Float)","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/rapidpressurechange(_:)","title":"case rapidPressureChange(Remark.RapidPressureChange)","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/rapidsnowincrease(_:totaldepth:)","title":"case rapidSnowIncrease(UInt, totalDepth: UInt)","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/relativehumidity(_:)","title":"case relativeHumidity(UInt)","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/runwayceiling(runway:height:)","title":"case runwayCeiling(runway: String, height: UInt)","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/runwayvisibility(runway:distance:)","title":"case runwayVisibility(runway: String, distance: Ratio)","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/sealevelpressure(_:)","title":"case seaLevelPressure(Float?)","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/sectorvisibility(direction:distance:)","title":"case sectorVisibility(direction: Remark.Direction, distance: Ratio)","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/significantclouds(type:directions:movingdirection:distant:apparent:)","title":"case significantClouds(type: Remark.SignificantCloudType, directions: Set<Remark.Direction>, movingDirection: Remark.Direction?, distant: Bool, apparent: Bool)","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/sixhourtemperatureextreme(type:temperature:)","title":"case sixHourTemperatureExtreme(type: Remark.Extreme, temperature: Float)","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/snowdepth(_:)","title":"case snowDepth(UInt)","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/sunshineduration(_:)","title":"case sunshineDuration(UInt)","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/temperaturedewpoint(temperature:dewpoint:)","title":"case temperatureDewpoint(temperature: Float, dewpoint: Float?)","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/thunderstormbeginend(events:)","title":"case thunderstormBeginEnd(events: Array<Remark.ThunderstormEvent>)","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/thunderstormlocation(proximity:directions:movingdirection:)","title":"case thunderstormLocation(proximity: Remark.Proximity?, directions: Set<Remark.Direction>, movingDirection: Remark.Direction?)","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/tornadicactivity(type:begin:end:location:movingdirection:)","title":"case tornadicActivity(type: Remark.TornadicActivityType, begin: DateComponents?, end: DateComponents?, location: Remark.Location, movingDirection: Remark.Direction?)","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/unknown(_:)","title":"case unknown(String)","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/variableceilingheight(low:high:)","title":"case variableCeilingHeight(low: UInt, high: UInt)","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/variableprevailingvisibility(low:high:)","title":"case variablePrevailingVisibility(low: Ratio, high: Ratio)","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/variableskycondition(low:high:height:)","title":"case variableSkyCondition(low: Remark.Coverage, high: Remark.Coverage, height: UInt?)","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/variablewinddirection(_:_:)","title":"case variableWindDirection(UInt16, UInt16)","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/waterequivalentdepth(_:)","title":"case waterEquivalentDepth(Float)","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/windchange(wind:after:)","title":"case windChange(wind: Wind, after: DateComponents)","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/winddataestimated","title":"case windDataEstimated","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/windshift(time:frontalpassage:)","title":"case windShift(time: DateComponents, frontalPassage: Bool)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/coverage\/broken","title":"case broken","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/coverage\/few","title":"case few","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/coverage\/overcast","title":"case overcast","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/coverage\/scattered","title":"case scattered","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/coverage\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/coverage\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/remark\/coverage\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/coverage\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/coverage\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/coverage\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftmetar\/remark\/coverage\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftmetar\/remark\/coverage\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/remark\/coverage","title":"Remark.Coverage","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/direction\/all","title":"case all","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/direction\/east","title":"case east","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/direction\/north","title":"case north","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/direction\/northeast","title":"case northeast","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/direction\/northwest","title":"case northwest","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/direction\/south","title":"case south","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/direction\/southeast","title":"case southeast","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/direction\/southwest","title":"case southwest","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/direction\/west","title":"case west","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/direction\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/direction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/remark\/direction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/remark\/direction","title":"Remark.Direction","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/eventtype\/began","title":"case began","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/eventtype\/ended","title":"case ended","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/eventtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/eventtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/remark\/eventtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/eventtype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/eventtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/eventtype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftmetar\/remark\/eventtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftmetar\/remark\/eventtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/remark\/eventtype","title":"Remark.EventType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/extreme\/high","title":"case high","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/extreme\/low","title":"case low","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/extreme\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/extreme\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/remark\/extreme\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/extreme\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/extreme\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/extreme\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftmetar\/remark\/extreme\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftmetar\/remark\/extreme\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/remark\/extreme","title":"Remark.Extreme","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/frequency\/constant","title":"case constant","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/frequency\/frequent","title":"case frequent","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/frequency\/occasional","title":"case occasional","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/frequency\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/frequency\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/remark\/frequency\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/frequency\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/frequency\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/frequency\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftmetar\/remark\/frequency\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftmetar\/remark\/frequency\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/remark\/frequency","title":"Remark.Frequency","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/highcloudtype\/cc","title":"case cc","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/highcloudtype\/cifibunc","title":"case ciFibUnc","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/highcloudtype\/cispi","title":"case ciSpi","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/highcloudtype\/cispicb","title":"case ciSpiCb","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/highcloudtype\/ciuncfib","title":"case ciUncFib","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/highcloudtype\/cs","title":"case cs","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/highcloudtype\/csgreater45","title":"case csGreater45","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/highcloudtype\/csless45","title":"case csLess45","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/highcloudtype\/cspartial","title":"case csPartial","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/highcloudtype\/none","title":"case none","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/highcloudtype\/obscured","title":"case obscured","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/highcloudtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/highcloudtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/remark\/highcloudtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/highcloudtype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/highcloudtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/highcloudtype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftmetar\/remark\/highcloudtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftmetar\/remark\/highcloudtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/remark\/highcloudtype","title":"Remark.HighCloudType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/lightningtype\/cloudtoair","title":"case cloudToAir","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/lightningtype\/cloudtocloud","title":"case cloudToCloud","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/lightningtype\/cloudtoground","title":"case cloudToGround","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/lightningtype\/withincloud","title":"case withinCloud","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/lightningtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/lightningtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/remark\/lightningtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/lightningtype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/lightningtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/lightningtype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftmetar\/remark\/lightningtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftmetar\/remark\/lightningtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/remark\/lightningtype","title":"Remark.LightningType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/lowcloudtype\/cbcal","title":"case cbCal","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/lowcloudtype\/cbcap","title":"case cbCap","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/lowcloudtype\/cuhumfra","title":"case cuHumFra","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/lowcloudtype\/cumedcon","title":"case cuMedCon","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/lowcloudtype\/cusc","title":"case cuSc","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/lowcloudtype\/none","title":"case none","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/lowcloudtype\/obscured","title":"case obscured","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/lowcloudtype\/sccugen","title":"case scCugen","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/lowcloudtype\/scnoncugen","title":"case scNonCugen","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/lowcloudtype\/stcufra","title":"case stCuFra","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/lowcloudtype\/stnebfra","title":"case stNebFra","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/lowcloudtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/lowcloudtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/remark\/lowcloudtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/lowcloudtype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/lowcloudtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/lowcloudtype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftmetar\/remark\/lowcloudtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftmetar\/remark\/lowcloudtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/remark\/lowcloudtype","title":"Remark.LowCloudType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/middlecloudtype\/ac","title":"case ac","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/middlecloudtype\/acasnsop","title":"case acAsNsOp","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/middlecloudtype\/accasflo","title":"case acCasFlo","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/middlecloudtype\/acchanging","title":"case acChanging","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/middlecloudtype\/acchaoticsky","title":"case acChaoticSky","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/middlecloudtype\/accugencbgen","title":"case acCugenCbgen","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/middlecloudtype\/actr","title":"case acTr","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/middlecloudtype\/asop","title":"case asOp","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/middlecloudtype\/astr","title":"case asTr","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/middlecloudtype\/none","title":"case none","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/middlecloudtype\/obscured","title":"case obscured","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/middlecloudtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/middlecloudtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/remark\/middlecloudtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/middlecloudtype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/middlecloudtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/middlecloudtype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftmetar\/remark\/middlecloudtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftmetar\/remark\/middlecloudtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/remark\/middlecloudtype","title":"Remark.MiddleCloudType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/navalweathercenter\/norfolk","title":"case norfolk","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/navalweathercenter\/sandiego","title":"case sanDiego","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/navalweathercenter\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/navalweathercenter\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/remark\/navalweathercenter\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/navalweathercenter\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/navalweathercenter\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/navalweathercenter\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftmetar\/remark\/navalweathercenter\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftmetar\/remark\/navalweathercenter\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/remark\/navalweathercenter","title":"Remark.NavalWeatherCenter","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/observationtype\/automated","title":"case automated","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/observationtype\/automatedwithprecipitation","title":"case automatedWithPrecipitation","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/observationtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/observationtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/remark\/observationtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/observationtype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/observationtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/observationtype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftmetar\/remark\/observationtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftmetar\/remark\/observationtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/remark\/observationtype","title":"Remark.ObservationType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/observedprecipitationtype\/showeringrain","title":"case showeringRain","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/observedprecipitationtype\/showers","title":"case showers","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/observedprecipitationtype\/virga","title":"case virga","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/observedprecipitationtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/observedprecipitationtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/remark\/observedprecipitationtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/observedprecipitationtype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/observedprecipitationtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/observedprecipitationtype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftmetar\/remark\/observedprecipitationtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftmetar\/remark\/observedprecipitationtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/remark\/observedprecipitationtype","title":"Remark.ObservedPrecipitationType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/pressurecharacter\/acceleratingdown","title":"case acceleratingDown","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/pressurecharacter\/acceleratingup","title":"case acceleratingUp","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/pressurecharacter\/deceleratingdown","title":"case deceleratingDown","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/pressurecharacter\/deceleratingup","title":"case deceleratingUp","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/pressurecharacter\/inflecteddown","title":"case inflectedDown","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/pressurecharacter\/inflectedup","title":"case inflectedUp","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/pressurecharacter\/steadydown","title":"case steadyDown","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/pressurecharacter\/steadyup","title":"case steadyUp","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/pressurecharacter\/zero","title":"case zero","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/pressurecharacter\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/pressurecharacter\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/remark\/pressurecharacter\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/pressurecharacter\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/pressurecharacter\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/pressurecharacter\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftmetar\/remark\/pressurecharacter\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftmetar\/remark\/pressurecharacter\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/remark\/pressurecharacter","title":"Remark.PressureCharacter","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/proximity\/distant","title":"case distant","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/proximity\/overhead","title":"case overhead","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/proximity\/vicinity","title":"case vicinity","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/proximity\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/proximity\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/remark\/proximity\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/proximity\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/proximity\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/proximity\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftmetar\/remark\/proximity\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftmetar\/remark\/proximity\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/remark\/proximity","title":"Remark.Proximity","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/rapidpressurechange\/falling","title":"case falling","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/rapidpressurechange\/rising","title":"case rising","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/rapidpressurechange\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/rapidpressurechange\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/remark\/rapidpressurechange\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/rapidpressurechange\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/rapidpressurechange\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/rapidpressurechange\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftmetar\/remark\/rapidpressurechange\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftmetar\/remark\/rapidpressurechange\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/remark\/rapidpressurechange","title":"Remark.RapidPressureChange","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/sensortype\/rvr","title":"case RVR","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/sensortype\/freezingrain","title":"case freezingRain","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/sensortype\/lightning","title":"case lightning","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/sensortype\/presentweather","title":"case presentWeather","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/sensortype\/rain","title":"case rain","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/sensortype\/secondaryceiling(location:)","title":"case secondaryCeiling(location: String)","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/sensortype\/secondaryvisibility(location:)","title":"case secondaryVisibility(location: String)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/sensortype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/sensortype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/remark\/sensortype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/remark\/sensortype","title":"Remark.SensorType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/significantcloudtype\/accas","title":"case acCas","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/significantcloudtype\/aclen","title":"case acLen","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/significantcloudtype\/cb","title":"case cb","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/significantcloudtype\/cbmam","title":"case cbMam","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/significantcloudtype\/cclen","title":"case ccLen","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/significantcloudtype\/cucon","title":"case cuCon","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/significantcloudtype\/rotor","title":"case rotor","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/significantcloudtype\/sclen","title":"case scLen","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/significantcloudtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/significantcloudtype\/from(raw:)","title":"static func from(raw: String) -> Remark.SignificantCloudType?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/significantcloudtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/remark\/significantcloudtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/significantcloudtype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/significantcloudtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/significantcloudtype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftmetar\/remark\/significantcloudtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftmetar\/remark\/significantcloudtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/remark\/significantcloudtype","title":"Remark.SignificantCloudType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/tornadicactivitytype\/funnelcloud","title":"case funnelCloud","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/tornadicactivitytype\/tornado","title":"case tornado","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/tornadicactivitytype\/waterspout","title":"case waterspout","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/tornadicactivitytype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/tornadicactivitytype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/remark\/tornadicactivitytype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/tornadicactivitytype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/tornadicactivitytype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/tornadicactivitytype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftmetar\/remark\/tornadicactivitytype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftmetar\/remark\/tornadicactivitytype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/remark\/tornadicactivitytype","title":"Remark.TornadicActivityType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/urgency\/caution","title":"case caution","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/urgency\/routine","title":"case routine","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/urgency\/unknown","title":"case unknown","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/urgency\/urgent","title":"case urgent","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/urgency\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/urgency\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/remark\/urgency\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/remark\/urgency","title":"Remark.Urgency","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/visibilitysource\/surface","title":"case surface","type":"case"},{"path":"\/documentation\/swiftmetar\/remark\/visibilitysource\/tower","title":"case tower","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/visibilitysource\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/visibilitysource\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/remark\/visibilitysource\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/visibilitysource\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/visibilitysource\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/visibilitysource\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftmetar\/remark\/visibilitysource\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftmetar\/remark\/visibilitysource\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/remark\/visibilitysource","title":"Remark.VisibilitySource","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/remark\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/remark\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/remark","title":"Remark","type":"enum"},{"title":"Supporting classes","type":"groupMarker"},{"children":[{"title":"Weather Types","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/weather\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/weather\/descriptor-swift.property","title":"let descriptor: Weather.Descriptor?","type":"property"},{"path":"\/documentation\/swiftmetar\/weather\/intensity-swift.property","title":"let intensity: Weather.Intensity","type":"property"},{"path":"\/documentation\/swiftmetar\/weather\/istornado","title":"var isTornado: Bool","type":"property"},{"path":"\/documentation\/swiftmetar\/weather\/phenomena","title":"let phenomena: Set<Weather.Phenomenon>","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/weather\/descriptor-swift.enum\/blowing","title":"case blowing","type":"case"},{"path":"\/documentation\/swiftmetar\/weather\/descriptor-swift.enum\/freezing","title":"case freezing","type":"case"},{"path":"\/documentation\/swiftmetar\/weather\/descriptor-swift.enum\/lowdrifting","title":"case lowDrifting","type":"case"},{"path":"\/documentation\/swiftmetar\/weather\/descriptor-swift.enum\/partial","title":"case partial","type":"case"},{"path":"\/documentation\/swiftmetar\/weather\/descriptor-swift.enum\/patchy","title":"case patchy","type":"case"},{"path":"\/documentation\/swiftmetar\/weather\/descriptor-swift.enum\/shallow","title":"case shallow","type":"case"},{"path":"\/documentation\/swiftmetar\/weather\/descriptor-swift.enum\/showering","title":"case showering","type":"case"},{"path":"\/documentation\/swiftmetar\/weather\/descriptor-swift.enum\/thunderstorms","title":"case thunderstorms","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/weather\/descriptor-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/weather\/descriptor-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/weather\/descriptor-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/weather\/descriptor-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/weather\/descriptor-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/weather\/descriptor-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftmetar\/weather\/descriptor-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftmetar\/weather\/descriptor-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/weather\/descriptor-swift.enum","title":"Weather.Descriptor","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/weather\/intensity-swift.enum\/heavy","title":"case heavy","type":"case"},{"path":"\/documentation\/swiftmetar\/weather\/intensity-swift.enum\/light","title":"case light","type":"case"},{"path":"\/documentation\/swiftmetar\/weather\/intensity-swift.enum\/moderate","title":"case moderate","type":"case"},{"path":"\/documentation\/swiftmetar\/weather\/intensity-swift.enum\/vicinity","title":"case vicinity","type":"case"},{"path":"\/documentation\/swiftmetar\/weather\/intensity-swift.enum\/vicinityheavy","title":"case vicinityHeavy","type":"case"},{"path":"\/documentation\/swiftmetar\/weather\/intensity-swift.enum\/vicinitylight","title":"case vicinityLight","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/weather\/intensity-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/weather\/intensity-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/weather\/intensity-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/weather\/intensity-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/weather\/intensity-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/weather\/intensity-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftmetar\/weather\/intensity-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftmetar\/weather\/intensity-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/weather\/intensity-swift.enum","title":"Weather.Intensity","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/weather\/phenomenon\/drizzle","title":"case drizzle","type":"case"},{"path":"\/documentation\/swiftmetar\/weather\/phenomenon\/dust","title":"case dust","type":"case"},{"path":"\/documentation\/swiftmetar\/weather\/phenomenon\/duststorm","title":"case dustStorm","type":"case"},{"path":"\/documentation\/swiftmetar\/weather\/phenomenon\/dustwhirls","title":"case dustWhirls","type":"case"},{"path":"\/documentation\/swiftmetar\/weather\/phenomenon\/fog","title":"case fog","type":"case"},{"path":"\/documentation\/swiftmetar\/weather\/phenomenon\/funnelcloud","title":"case funnelCloud","type":"case"},{"path":"\/documentation\/swiftmetar\/weather\/phenomenon\/hail","title":"case hail","type":"case"},{"path":"\/documentation\/swiftmetar\/weather\/phenomenon\/haze","title":"case haze","type":"case"},{"path":"\/documentation\/swiftmetar\/weather\/phenomenon\/icecrystals","title":"case iceCrystals","type":"case"},{"path":"\/documentation\/swiftmetar\/weather\/phenomenon\/icepellets","title":"case icePellets","type":"case"},{"path":"\/documentation\/swiftmetar\/weather\/phenomenon\/mist","title":"case mist","type":"case"},{"path":"\/documentation\/swiftmetar\/weather\/phenomenon\/rain","title":"case rain","type":"case"},{"path":"\/documentation\/swiftmetar\/weather\/phenomenon\/sand","title":"case sand","type":"case"},{"path":"\/documentation\/swiftmetar\/weather\/phenomenon\/sandstorm","title":"case sandstorm","type":"case"},{"path":"\/documentation\/swiftmetar\/weather\/phenomenon\/smoke","title":"case smoke","type":"case"},{"path":"\/documentation\/swiftmetar\/weather\/phenomenon\/snow","title":"case snow","type":"case"},{"path":"\/documentation\/swiftmetar\/weather\/phenomenon\/snowgrains","title":"case snowGrains","type":"case"},{"path":"\/documentation\/swiftmetar\/weather\/phenomenon\/snowpellets","title":"case snowPellets","type":"case"},{"path":"\/documentation\/swiftmetar\/weather\/phenomenon\/spray","title":"case spray","type":"case"},{"path":"\/documentation\/swiftmetar\/weather\/phenomenon\/squalls","title":"case squalls","type":"case"},{"path":"\/documentation\/swiftmetar\/weather\/phenomenon\/thunderstorm","title":"case thunderstorm","type":"case"},{"path":"\/documentation\/swiftmetar\/weather\/phenomenon\/unknownprecipitation","title":"case unknownPrecipitation","type":"case"},{"path":"\/documentation\/swiftmetar\/weather\/phenomenon\/volcanicash","title":"case volcanicAsh","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/weather\/phenomenon\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/weather\/phenomenon\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/weather\/phenomenon\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/weather\/phenomenon\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/weather\/phenomenon\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/weather\/phenomenon\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftmetar\/weather\/phenomenon\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftmetar\/weather\/phenomenon\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/weather\/phenomenon","title":"Weather.Phenomenon","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/weather\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/weather\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/weather","title":"Weather","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/windshear\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/windshear\/height","title":"let height: UInt16","type":"property"},{"path":"\/documentation\/swiftmetar\/windshear\/wind","title":"let wind: Wind","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/windshear\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/windshear\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/windshear","title":"Windshear","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/runwayvisibility\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/runwayvisibility\/runwayid","title":"let runwayID: String","type":"property"},{"path":"\/documentation\/swiftmetar\/runwayvisibility\/visibility","title":"let visibility: Visibility","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/runwayvisibility\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/runwayvisibility\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/runwayvisibility","title":"RunwayVisibility","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/altimeter\/==(_:_:)","title":"static func == (Altimeter, Altimeter) -> Bool","type":"op"},{"path":"\/documentation\/swiftmetar\/altimeter\/_(_:_:)-3ag2h","title":"static func < (Altimeter, Altimeter) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/altimeter\/hpa(_:)","title":"case hPa(UInt16)","type":"case"},{"path":"\/documentation\/swiftmetar\/altimeter\/inhg(_:)","title":"case inHg(UInt16)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/altimeter\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/altimeter\/inhg","title":"var inHg: Float","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/altimeter\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/altimeter\/'...(_:)-4gj0k","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/swiftmetar\/altimeter\/'...(_:)-60eay","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/swiftmetar\/altimeter\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/swiftmetar\/altimeter\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/swiftmetar\/altimeter\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/swiftmetar\/altimeter\/_(_:_:)-6luz7","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/swiftmetar\/altimeter\/_=(_:_:)-4cbra","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/swiftmetar\/altimeter\/_=(_:_:)-5f2ui","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/altimeter\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/altimeter\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/altimeter\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/altimeter","title":"Altimeter","type":"enum"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/condition\/==(_:_:)","title":"static func == (Condition, Condition) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/condition\/broken(_:type:)","title":"case broken(UInt, type: Condition.CeilingType?)","type":"case"},{"path":"\/documentation\/swiftmetar\/condition\/clear","title":"case clear","type":"case"},{"path":"\/documentation\/swiftmetar\/condition\/few(_:type:)","title":"case few(UInt, type: Condition.CeilingType?)","type":"case"},{"path":"\/documentation\/swiftmetar\/condition\/indefinite(_:)","title":"case indefinite(UInt)","type":"case"},{"path":"\/documentation\/swiftmetar\/condition\/nosignificantclouds","title":"case noSignificantClouds","type":"case"},{"path":"\/documentation\/swiftmetar\/condition\/overcast(_:type:)","title":"case overcast(UInt, type: Condition.CeilingType?)","type":"case"},{"path":"\/documentation\/swiftmetar\/condition\/scattered(_:type:)","title":"case scattered(UInt, type: Condition.CeilingType?)","type":"case"},{"path":"\/documentation\/swiftmetar\/condition\/skyclear","title":"case skyClear","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/condition\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/condition\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/condition\/ceilingtype\/cumulonimbus","title":"case cumulonimbus","type":"case"},{"path":"\/documentation\/swiftmetar\/condition\/ceilingtype\/toweringcumulus","title":"case toweringCumulus","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/condition\/ceilingtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/condition\/ceilingtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/condition\/ceilingtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/condition\/ceilingtype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/condition\/ceilingtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/condition\/ceilingtype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/swiftmetar\/condition\/ceilingtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/swiftmetar\/condition\/ceilingtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/condition\/ceilingtype","title":"Condition.CeilingType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/condition\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/condition\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/condition","title":"Condition","type":"enum"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/visibility\/==(_:_:)","title":"static func == (Visibility, Visibility) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/visibility\/equal(_:)","title":"case equal(Visibility.Value)","type":"case"},{"path":"\/documentation\/swiftmetar\/visibility\/greaterthan(_:)","title":"case greaterThan(Visibility.Value)","type":"case"},{"path":"\/documentation\/swiftmetar\/visibility\/lessthan(_:)","title":"case lessThan(Visibility.Value)","type":"case"},{"path":"\/documentation\/swiftmetar\/visibility\/variable(_:_:)","title":"case variable(Visibility, Visibility)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/visibility\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/visibility\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/visibility\/value\/==(_:_:)","title":"static func == (Visibility.Value, Visibility.Value) -> Bool","type":"op"},{"path":"\/documentation\/swiftmetar\/visibility\/value\/_(_:_:)-4r4cb","title":"static func < (Visibility.Value, Visibility.Value) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/visibility\/value\/feet(_:)","title":"case feet(UInt16)","type":"case"},{"path":"\/documentation\/swiftmetar\/visibility\/value\/meters(_:)","title":"case meters(UInt16)","type":"case"},{"path":"\/documentation\/swiftmetar\/visibility\/value\/statutemiles(_:)","title":"case statuteMiles(Ratio)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/visibility\/value\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/visibility\/value\/feet","title":"var feet: Float","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/visibility\/value\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/visibility\/value\/'...(_:)-4xis3","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/swiftmetar\/visibility\/value\/'...(_:)-7h7zk","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/swiftmetar\/visibility\/value\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/swiftmetar\/visibility\/value\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/swiftmetar\/visibility\/value\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/swiftmetar\/visibility\/value\/_(_:_:)-llu4","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/swiftmetar\/visibility\/value\/_=(_:_:)-2xk0t","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/swiftmetar\/visibility\/value\/_=(_:_:)-5o9bn","title":"static func <= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/visibility\/value\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/visibility\/value\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/visibility\/value\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/visibility\/value","title":"Visibility.Value","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/visibility\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/visibility\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/visibility","title":"Visibility","type":"enum"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/wind\/==(_:_:)","title":"static func == (Wind, Wind) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/wind\/calm","title":"case calm","type":"case"},{"path":"\/documentation\/swiftmetar\/wind\/direction(_:speed:gust:)","title":"case direction(UInt16, speed: Wind.Speed, gust: Wind.Speed?)","type":"case"},{"path":"\/documentation\/swiftmetar\/wind\/directionrange(_:headingrange:speed:gust:)","title":"case directionRange(UInt16, headingRange: (UInt16, UInt16), speed: Wind.Speed, gust: Wind.Speed?)","type":"case"},{"path":"\/documentation\/swiftmetar\/wind\/variable(speed:headingrange:)","title":"case variable(speed: Wind.Speed, headingRange: (UInt16, UInt16)?)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/wind\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/wind\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/wind\/speed\/==(_:_:)","title":"static func == (Wind.Speed, Wind.Speed) -> Bool","type":"op"},{"path":"\/documentation\/swiftmetar\/wind\/speed\/_(_:_:)-2g7qq","title":"static func < (Wind.Speed, Wind.Speed) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/wind\/speed\/knots(_:)","title":"case knots(UInt16)","type":"case"},{"path":"\/documentation\/swiftmetar\/wind\/speed\/kph(_:)","title":"case kph(UInt16)","type":"case"},{"path":"\/documentation\/swiftmetar\/wind\/speed\/mps(_:)","title":"case mps(UInt16)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/wind\/speed\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/wind\/speed\/knots","title":"var knots: Float","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/wind\/speed\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/wind\/speed\/'...(_:)-361in","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/swiftmetar\/wind\/speed\/'...(_:)-6mtp8","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/swiftmetar\/wind\/speed\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/swiftmetar\/wind\/speed\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/swiftmetar\/wind\/speed\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/swiftmetar\/wind\/speed\/_(_:_:)-33ln0","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/swiftmetar\/wind\/speed\/_=(_:_:)-6yreu","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/swiftmetar\/wind\/speed\/_=(_:_:)-89mj0","title":"static func <= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/wind\/speed\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/wind\/speed\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/wind\/speed\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/wind\/speed","title":"Wind.Speed","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/wind\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftmetar\/wind\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/wind","title":"Wind","type":"enum"}],"path":"\/documentation\/swiftmetar\/weathertypes","title":"Weather Types","type":"symbol"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/error\/badformat","title":"case badFormat","type":"case"},{"path":"\/documentation\/swiftmetar\/error\/invalidaltimeter(_:)","title":"case invalidAltimeter(String)","type":"case"},{"path":"\/documentation\/swiftmetar\/error\/invalidconditions(_:)","title":"case invalidConditions(String)","type":"case"},{"path":"\/documentation\/swiftmetar\/error\/invaliddate(_:)","title":"case invalidDate(String)","type":"case"},{"path":"\/documentation\/swiftmetar\/error\/invalidforecasttemperature(_:)","title":"case invalidForecastTemperature(String)","type":"case"},{"path":"\/documentation\/swiftmetar\/error\/invalidicing(_:)","title":"case invalidIcing(String)","type":"case"},{"path":"\/documentation\/swiftmetar\/error\/invalidperiod(_:)","title":"case invalidPeriod(String)","type":"case"},{"path":"\/documentation\/swiftmetar\/error\/invalidtempdewpoint(_:)","title":"case invalidTempDewpoint(String)","type":"case"},{"path":"\/documentation\/swiftmetar\/error\/invalidturbulence(_:)","title":"case invalidTurbulence(String)","type":"case"},{"path":"\/documentation\/swiftmetar\/error\/invalidvisibility(_:)","title":"case invalidVisibility(String)","type":"case"},{"path":"\/documentation\/swiftmetar\/error\/invalidweather(_:)","title":"case invalidWeather(String)","type":"case"},{"path":"\/documentation\/swiftmetar\/error\/invalidwinds(_:)","title":"case invalidWinds(String)","type":"case"},{"path":"\/documentation\/swiftmetar\/error\/invalidwindshear(_:)","title":"case invalidWindshear(String)","type":"case"},{"path":"\/documentation\/swiftmetar\/error\/unknownreporttype(_:)","title":"case unknownReportType(String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/error\/errordescription-24bdq","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/swiftmetar\/error\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftmetar\/error\/errordescription-7t13j","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/swiftmetar\/error\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/swiftmetar\/error\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/swiftmetar\/error\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/swiftmetar\/error\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/swiftmetar\/error","title":"Error","type":"enum"}],"path":"\/documentation\/swiftmetar","title":"SwiftMETAR","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}